{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/utc-date/index.ts"],"names":[],"mappings":"AAEA,MAAM,UAAU,WAAW,CAAC,EAC1B,SAAS,EACT,MAAM,MACW,EAAE;IACnB,MAAM,KAAK,GAAG,IAAI,IAAI,SAAS,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC;IACnE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,GAAkB,MAAM,IAAI,EAAE,CAAC;IACzD,MAAM,aAAa,GAAG,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;IACjD,MAAM,cAAc,GAAG,CAAC,CAAC,IAAI,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;IACpD,MAAM,YAAY,GAAG,CAAC,CAAC,IAAI,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IAE9C,IAAI,KAAK,CAAC,aAAa,CAAC,EAAE;QACxB,MAAM,IAAI,SAAS,CAAC,uDAAuD,IAAI,GAAG,CAAC,CAAC;KACrF;IAED,IAAI,KAAK,CAAC,cAAc,CAAC,EAAE;QACzB,MAAM,IAAI,SAAS,CAAC,wDAAwD,KAAK,GAAG,CAAC,CAAC;KACvF;IAED,IAAI,KAAK,CAAC,YAAY,CAAC,EAAE;QACvB,MAAM,IAAI,SAAS,CAAC,sDAAsD,GAAG,GAAG,CAAC,CAAC;KACnF;IAED,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CACtB,KAAK,CAAC,cAAc,EAAE,GAAG,aAAa,EACtC,KAAK,CAAC,WAAW,EAAE,GAAG,cAAc,EACpC,KAAK,CAAC,UAAU,EAAE,GAAG,YAAY,CAAC,CAAC,CAAC;AACxC,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,OAAO,CAAC,OAAuB;IACnD,OAAO,WAAW,CAAC,OAAO,CAAC,CAAC;AAC9B,CAAC","sourcesContent":["import type { UTCDateOffset, UTCDateParams } from './custom_typings.js';\n\nexport function utcDateSync({\n  startDate,\n  offset,\n}: UTCDateParams = {}): Date {\n  const dated = null == startDate ? new Date() : new Date(startDate);\n  const { year, month, day }: UTCDateOffset = offset || {};\n  const validatedYear = +(null == year ? 0 : year);\n  const validatedMonth = +(null == month ? 0 : month);\n  const validatedDay = +(null == day ? 0 : day);\n\n  if (isNaN(validatedYear)) {\n    throw new TypeError(`Expected 'year' to be a valid number, but received '${year}'`);\n  }\n\n  if (isNaN(validatedMonth)) {\n    throw new TypeError(`Expected 'month' to be a valid number, but received '${month}'`);\n  }\n\n  if (isNaN(validatedDay)) {\n    throw new TypeError(`Expected 'day' to be a valid number, but received '${day}'`);\n  }\n\n  return new Date(Date.UTC(\n    dated.getUTCFullYear() + validatedYear,\n    dated.getUTCMonth() + validatedMonth,\n    dated.getUTCDate() + validatedDay));\n}\n\nexport async function utcDate(options?: UTCDateParams): Promise<Date> {\n  return utcDateSync(options);\n}\n"]}