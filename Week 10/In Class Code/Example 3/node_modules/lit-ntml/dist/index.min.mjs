import{parse as t,parseFragment as n,serialize as r}from"parse5";const c=(o=r,async(t,n,...r)=>{const c=await async function(t,...n){const r=n.map(async t=>{const n=(Array.isArray(t)?t:[t]).map(async t=>"function"==typeof t?t():t);return Promise.all(n)}),c=await Promise.all(r),o=c.length;return t.reduce((t,n,r)=>{const a=c[r],e=Array.isArray(a)?a.join(""):a;return`${t}${r>=o?n:`${n}${e}`}`},"")}(n,...r);return o(t(c))});var o;const a=function(t){return(n,r,...c)=>{const o=function(t,...n){const r=n.map(t=>(Array.isArray(t)?t:[t]).map(t=>"function"==typeof t?t():t)),c=r.length;return t.reduce((t,n,o)=>{const a=r[o],e=Array.isArray(a)?a.join(""):a;return`${t}${o>=c?n:`${n}${e}`}`},"")}(r,...c);return t(n(o))}}(r),e=async(n,...r)=>c(n=>t(`<!doctype html>${n}`),n,...r),s=async(t,...r)=>c(n,t,...r),y=(n,...r)=>a(n=>t(`<!doctype html>${n}`),n,...r),u=(t,...r)=>a(n,t,...r);var m={html:e,htmlFragment:s,htmlFragmentSync:u,htmlSync:y};export default m;export{e as html,s as htmlFragment,u as htmlFragmentSync,y as htmlSync};
//# sourceMappingURL=index.min.mjs.map
